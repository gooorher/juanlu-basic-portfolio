---
import Layout from '../layouts/Layout.astro';

const projects = [
  { id: 1, title: 'Proyecto 1', category: 'web', image: '/placeholder-project.jpg', description: 'Descripción del Proyecto 1' },
  { id: 2, title: 'Proyecto 2', category: 'mobile', image: '/placeholder-project.jpg', description: 'Descripción del Proyecto 2' },
  { id: 3, title: 'Proyecto 3', category: 'ai', image: '/placeholder-project.jpg', description: 'Descripción del Proyecto 3' },
  // Agrega más proyectos según sea necesario
];
---

<Layout title="Juanlu - Proyectos">
  <div class="projects-container">
    <h1>Mis Proyectos</h1>
    <div class="filter-buttons">
      <button class="filter-btn active" data-filter="all">Todos</button>
      <button class="filter-btn" data-filter="web">Web</button>
      <button class="filter-btn" data-filter="mobile">Mobile</button>
      <button class="filter-btn" data-filter="ai">AI</button>
    </div>
    <div class="projects-grid">
      {projects.map((project) => (
        <div class="project-card" data-category={project.category}>
          <img src={project.image} alt={project.title} class="lazy" data-src={project.image} />
          <h3>{project.title}</h3>
          <p>{project.description}</p>
        </div>
      ))}
    </div>
  </div>
</Layout>

<style>
  .projects-container {
    max-width: 1000px;
    margin: 0 auto;
  }

  .filter-buttons {
    display: flex;
    justify-content: center;
    gap: 1rem;
    margin-bottom: 2rem;
  }

  .filter-btn {
    background-color: var(--background);
    color: var(--text);
    border: 1px solid var(--primary);
    padding: 0.5rem 1rem;
    border-radius: 5px;
    cursor: pointer;
    transition: all 0.3s ease;
  }

  .filter-btn.active, .filter-btn:hover {
    background-color: var(--primary);
    color: var(--background);
  }

  .projects-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
    gap: 2rem;
  }

  .project-card {
    background-color: var(--background);
    border: 1px solid var(--primary);
    border-radius: 5px;
    overflow: hidden;
    transition: all 0.3s ease;
  }

  .project-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
  }

  .project-card img {
    width: 100%;
    height: 200px;
    object-fit: cover;
  }

  .project-card h3, .project-card p {
    padding: 1rem;
  }
</style>

<script>
  const filterButtons = document.querySelectorAll('.filter-btn');
  const projectCards = document.querySelectorAll('.project-card');

  filterButtons.forEach(button => {
    button.addEventListener('click', () => {
      const filter = button.dataset.filter;
      
      filterButtons.forEach(btn => btn.classList.remove('active'));
      button.classList.add('active');

      projectCards.forEach(card => {
        if (filter === 'all' || card.dataset.category === filter) {
          card.style.display = 'block';
        } else {
          card.style.display = 'none';
        }
      });
    });
  });
</script>